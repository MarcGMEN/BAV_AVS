<?
$tabTym=return_types_membre();?>
<script>
<!--
		var etatG;
		var modifRub=false;
		function initPagePage() {
			<?php if ($GET_option == 'modif') { ?>
				x_return_user_ajax("<?=isset($GET_usr_id) ? $GET_usr_id : $COOKIE_AR_id_usr ?>",display_user_modif);
			<?php }?> 
			<?php if ($GET_option == 'create' && $membre_MODE_CREATE=="confirm" && 
			    (!isset($GET_mode) || $GET_mode != "gestion") ) { ?>
				getElement('trJustification').style.display='';
			<?}?>
			document.formMembre.usr_login.focus();
			
		}

		/* affichage du l'utilisateur en modification*/
		function display_user_modif(val) {
			if (typeof val == "object") {
				laForm=document.formMembre
				// sauvegarde de l'etat en global pour le javascript
				etatG=val['usr_etat'];

				// bouton par défaut pour la modification
				// modifier, Supprimer (sous condition) et reset
				var txt1="<input type='button' class='button' name='Modifier' value='Modifier' onclick=\"valide(this.form,'Modifier')\" /> ";
				<?php// if ($membre_MODE_UPDATE != "donnees" && (!isset($GET_mode) || $GET_mode != "gestion")) {?>
				<?php if ($membre_MODE_UPDATE != "donnees" || $GET_mode == "gestion") {?>
									txt1+="<input type='button' class='button' name='Supprimer' value='Supprimer' onclick=\"supMembre(this.form)\" />";
				<?php }?> 
				txt1+="<input type='button' class='button' value='Reset' onclick=\"initPagePage()\" />"; 
				
				// si le compte est bloque modification du radio pour le deblocaque
				// si mode=GESTION et option=modif
				// la valorisation du checkbox passe le compte a C 
				if (document.formMembre.usr_etat_bloque) {
					if (val['usr_etat'] == "B") {
						document.formMembre.usr_etat_bloque.checked=true;
						val['usr_etat']="C";
					}
					else if (val['usr_etat'] != "C"){
						document.formMembre.usr_etat_bloque.disabled=true;
					}
				}
				<?php if (!isset($GET_mode) || $GET_mode != "gestion" || 
					  $COOKIE_AR_profil > $membre_NIVEAU_GESTION_UPDATE) {?>
				// EN MODIFICATION 
				// l'utilisateur peut demande l'annulation de la modification
				else if (val['usr_etat'] == "M"){
					
					// blocage de tous les type membre
					if (laForm.id_tym.length > 1) {
			        	for (var i=0; i<laForm.id_tym.length;i++) {
			                laForm.id_tym[i].disabled=true;
						}
			        }
			        else {
			        	laForm.id_tym.disabled=true;
			        }
			        
			        val['tym_voulu']="Demandé : <i>"+val['tym2_libelle']+"<i>";
			        val['etat']="En attente de validation";

			        // blocage justification
			        if (laForm.usr_justification) {
			        	laForm.usr_justification.disabled=true;
			        }

			        // creation du bouton d'annulation de modification
			        txt1+="<input type='button' class='button' "
				   	txt1+="value='Annuler la modification' name='AnnulerModif' ";
				    txt1+="onclick='annuleModif(this.form)' />";
			        
				}
				 <? if ($COOKIE_AR_profil > $membre_NIVEAU_LIBRE_CONFIG_RUBRIQUE &&
					        $membre_MODE_UPDATE == "confirm") {?>
					 	getElement('trJustification').style.display='';
			    <?php }?>
					
				<?php } // ?>
				
			  // si mode=gestion et utilisateur autorisé a la gestion
			  <?php if (isset($GET_mode) && $GET_mode == "gestion" && 
			       $COOKIE_AR_profil <= $membre_NIVEAU_GESTION_UPDATE) {?>
			  	if (val['usr_etat'] == "M"){

			  		// valorisation des radio avec la demande
				  	if (val['usr_id_tym_demande']) {
				  		val['usr_id_tym']=val['usr_id_tym_demande'];

			  		// 	message pour l'ancienne valeur
			        	val['tym_voulu']="Ancien : <i>"+val['tym_libelle']+"<i>";
			        	val['etat']="En attente de validation";
				  	}
			        // blocage de la justification
			        if (laForm.usr_justification) {
			        	laForm.usr_justification.disabled=true;
			        }

			        // creation du bouton de validation de la modification
			        txt1="<input type='button' class='button' "
				   	txt1+="value='Valider' ";
				    txt1+="onclick='valideModif(this.form)' />";

				    // du bouton de refus de la validation
			        txt1+="<input type='button' class='button' "
					txt1+="value='Refuser'  ";
					txt1+="onclick='refusModif(this.form)' />";
				        
			        // creation du bouton d'annulation de modification
			        txt1+="<input type='button' class='button' "
				   	txt1+="value='Annuler la modification' name='AnnulerModif' ";
				    txt1+="onclick='annuleModif(this.form)' />";
				}
				// si compte en attente de validation par l'agent
				// on fait rien
			  	else if (val['usr_etat'] == "A") {
			  	   val['etat']="En attente de confirmation par l'utilisateur";
				  	// creation du bouton de validation du compte
			        txt1="<input type='button' class='button' "
				   	txt1+="value='Accepter' name='Valider' ";
				   	txt1+="onclick='accepte(this.form)' />";

				    // creation du bouton de refus du compte
			  	   	txt1+="<input type='button' class='button' "
					txt1+="value='Refuser' name='Valider' ";
					txt1+="onclick='refus(this.form)' />";

					
			  	}
			  	// si compte en attente de validation après creation
			  	else if (val['usr_etat'] == "V") {
			  	   	val['etat']="A valider";
				  	// creation du bouton de validation du compte
			        txt1="<input type='button' class='button' "
				   	txt1+="value='Accepter' name='Valider' ";
				   	txt1+="onclick='accepte(this.form)' />";

				    // creation du bouton de refus du compte
			  	   	txt1+="<input type='button' class='button' "
					txt1+="value='Refuser' name='Valider' ";
					txt1+="onclick='refus(this.form)' />";
			  	}
			  	
			 	getElement('trJustification').style.display='';
			    // blocage justification
		        if (laForm.usr_justification) {
		        	laForm.usr_justification.disabled=true;
		        }
		  	
			  <?}?>
			  	getElement('buttonPlus').innerHTML=txt1;

		        // sauve du type de membre
				val['usr_id_tym_old']=val['usr_id_tym'];
				tym=false;
				// affichage des rubriques possible pour se type de membre
				if (document.formMembre.id_tym) {
					if (document.formMembre.id_tym.length) {
						for (i in document.formMembre.id_tym) {
							if (document.formMembre.id_tym[i].value == 1 && val['tym_niveau'] != 1) {
								document.formMembre.id_tym[i].disabled=true;
							}
							if (document.formMembre.id_tym[i] &&
								document.formMembre.id_tym[i].value == val['usr_id_tym'] ) {
								document.formMembre.id_tym[i].checked=true;
								affichRubriques(val['tym_niveau'], val['usr_id']);
								tym=true;
								break;
							}
						}
					}
					else {
						if (document.formMembre.id_tym.value == 1 && val['usr_niveau'] != 1) {
							document.formMembre.id_tym.disabled=true;
						}
						if (document.formMembre.id_tym.value &&
							document.formMembre.id_tym.value == val['usr_id_tym'] ) {
							document.formMembre.id_tym.checked=true;
							affichRubriques(val['tym_niveau'], val['usr_id']);
							tym=true;
						}
					}
					if (!tym) {
						if (document.formMembre.id_tym.length) {
							for (i in document.formMembre.id_tym) {
								document.formMembre.id_tym[i].disabled=true;
							}
						}
						else {
							document.formMembre.id_tym.disabled=true;
						}
					}
				}
				else {
					// aucun type membre on masque les type memebre et rubrique
					if (getElement('tableTymRub')) {
						getElement('tableTymRub').style.display='none';
					}  
				}

				// si user intouchable car lie au site
				// on bloque le type membre
				// blocage du bouton Supprimer
				if (val['usr_permanent'] == 1) {
					if (document.formMembre.id_tym) {
						if (document.formMembre.id_tym.length) {
							for (i in document.formMembre.id_tym) {
								document.formMembre.id_tym[i].disabled=true;
							}
						}
						else {
							document.formMembre.id_tym.disabled=true;
						}
						if (document.formMembre.Supprimer) {
							document.formMembre.Supprimer.disabled=true;
							document.formMembre.Supprimer.className="error";
						}
					}
				}
				// sauvegarde login et mail
				val['usr_login_old']=val['usr_login'];
				val['usr_email_old']=val['usr_email'];
				display_formulaire(val,document.formMembre);
			}
		}

		/* affichage des rubriques pour un user et un type membre*/ 
		 
		function affichRubriques(tym, id_usr) {
			x_return_rubriqueMediaForUser_ajax(tym,id_usr, display_rubriques);
		}	

		/* affichages des rubrique */
		function display_rubriques(val) {
			var repr="<div class='tittab'>Vous pouvez intervenir sur les rubriques suivantes : </div>";
			if(typeof val == "object") {
				repr+="<table border=0 width='100%' cellpadding='1' cellspacing='1' >";
				repr+="<tr>";
				repr+="<td>";
				repr+=affrub(val); 
				repr+="</td>";
        		repr+="</tr>";
				repr+="</table>";
			}
			getElement('lesRubriques').innerHTML=repr;
		}

		/* methode recurcise pour l'affichage des rubrique */ 
		function affrub(val) {
			var repr="";
			unError('id_tym');
			if(typeof val == "object") {
				for (var i in val) {
					repr+="<table border=0 width='90%' cellpadding='1' cellspacing='1' >";
					repr+="<tr>";
					repr+="<td width='5'></td>";
					repr+="<td width='95%' class='tabl0' >";
					repr+="<input type='checkbox' name='rubrique[]' value='"+val[i]['data']['rub_id']+"'";
					if (val[i]['droit']) {
						repr+=" checked ";
					}
					else {
						repr+="  ";
					}
					var reprPLus="";	
					if (etatG=="M") {
						<?php if ((!isset($GET_mode) || $GET_mode != "gestion")){?>
							repr+="	disabled  ";
						<? } else { ?>
							if (val[i]['droit']) {
								reprPLus=" => <b>"+val[i]['droit']+"</b>";
							}
						<?}?>
					}
					repr+="	onchange='modifRubrique()'  "
					repr+="	/> "
					repr+=val[i]['libelle'];
					repr+=reprPLus;
					repr+="</td>";
	    			repr+="</tr>";
	    			repr+="<tr>";
					repr+="<td width='5'></td>";
        			repr+="<td>";
        			repr+=affrub(val[i]['next']); 
        			repr+="</td>";
        			repr+="</tr>";
					repr+="</table>";
				}
			}
			return repr;
		}


		/************************************************/
		/* VALIDATION DE lA FORM */
		/************************************************/
		function valide(laForm, action) {
			valid=true;	
	        id_tym_value=0;

	        // recherche du type membre choisit
	        if (laForm.id_tym) {
    	    if (laForm.id_tym.length > 1) {
    	    	for (var i=0; i<laForm.id_tym.length;i++) {
		            if (laForm.id_tym[i].checked) {
		                id_tym_value=laForm.id_tym[i].value;
		                if (laForm.usr_id_tym_old.value == laForm.id_tym[i].value) {
		                	laForm.id_tym[i].value=0;
		                }
		             }
	    	      }
	        }
	        else {
	            id_tym_value=laForm.id_tym.value;
	        }
	        }
	        // si l'utilisateur n'as pas le droit de modifier ses rubriques 
	        // ou si en mode creation en confirm.
	        <? if (($COOKIE_AR_profil > $membre_NIVEAU_LIBRE_CONFIG_RUBRIQUE &&
		          $membre_MODE_UPDATE == "confirm") || 
			      ($GET_option == 'create' && $membre_MODE_CREATE=="confirm" && 
			    (!isset($GET_mode) || $GET_mode != "gestion") ) ) { ?>
	        if (laForm.usr_justification && 
	    	      laForm.usr_justification.value == "" && 
	    	      (modifRub || laForm.usr_id_tym_old.value != id_tym_value)) {
	        	metError('justification',"Obligatoire pour selection de rubrique "+modifRub+" ou "+laForm.usr_id_tym_old.value+" != "+id_tym_value);
	        	valid=false;
        	}
	        <?php }?>

	        <?php if ($GET_option == "create") { ?>
	        getElement('usr_pass_error').innerHTML="";
	        if (laForm.usr_pass.value.trim() == "" ) {
	        	metError('pass',"obligatoire");
        		valid=false;
	        }else {
    	    	Expression2 = new RegExp("^([a-zA-Z0-9_&$ -]+){1,}$", "g");
    	    	if (laForm.usr_pass.value > 0 && 
	                !Expression2.test(laForm.usr_pass.value) ) {
    			    metError('pass',"Mot de passe au mauvais format, [a-zA-Z0-9_&$ -].");
    			    valid=false;
             	}  
    	    }
    	    if (laForm.usr_pass.value.trim() != "" && laForm.usr_pass.value != laForm.usr_pass2.value) {
    	    	//metError('pass2',"");
        		metError('pass',"Les deux mot de pass ne sont pas identique");
        		valid=false;
	    	}
	    	if (id_tym_value==0) {
        		metError('id_tym',"Choix d'un type membre obligatoire");
        		valid=false;
	    	}
	        <?php } //fin en creation ?>
	        
        	if (laForm.usr_nom.value.trim() == "") {
	        	metError('nom',"obligatoire");
	        	valid=false;
	        }
        	else {
        		Expression2 = new RegExp("^([a-zA-Z0-9éèàçù_&*$ -]+){1,}$", "g");
        		if (laForm.usr_nom.value.length > 0 && 
                  	!Expression2.test(laForm.usr_nom.value) ) {
    		       	metError('nom',"Le nom est au mauvais format, [a-zA-Z0-9éèàçù_&*$- ].");
    		      	valid=false;
        		}
        	}
        	if (laForm.usr_login.value.trim() == "") {
	        	metError('login',"obligatoire");
	        	valid=false;
	        }
        	else {
            	Expression2 = new RegExp("^([a-zA-Z0-9]+){1,}$", "g");
	         	if (laForm.usr_login.value.length > 0 && 
                 	!Expression2.test(laForm.usr_login.value) ) {
		        	metError('login',"Login au mauvais format, [a-zA-Z0-9].");
		        	valid=false;
         		}  
        	}
        	if (laForm.usr_email.value.trim() == "") {
	        	metError('email',"obligatoire");
	        	valid=false;
	        }
       	 	else {
           		 // test da la validité des champs
           		if (!valideEmail(laForm.usr_email.value)) {
           			metError('email',"Le mail est au mauvais Format ! nnn@nnn.com");
 	        		valid=false;
           		}
		     }
	        //alert(valid);
    	    if (valid) {
        	    laForm.action.value=action;
        	    //alert("valide sur ="+action);
            	laForm.submit();
	        }
	    }

		// valorisation du falg de modification d'un rubrique
		/************************************************/
		function modifRubrique() {
			modifRub=true;
		}


		/************************************************/
		/****MOT DE PASS 
		/****MOT DE PASS 
		/************************************************/
		
	    /* affichage de la fenetre de saisie du mot de passe*/
	    /************************************************/
		function modifPass() {
	    	Aff_layer('mod_pass');
	    	document.formMembre.chgPass.style.display='none';
//	    	Aff_layer('mod_pass');
	    }
		
		// validation de la modification du mot de passe
		/************************************************/
		function validePass(laForm) {
			valid=true;
			if (laForm.pass_old.value == "") {
        		metError('pass',"ancien mot de passe obligatoire");
        		valid=false;
	    	}
    	    if (laForm.new_pass2.value != "" &&
    	    		laForm.new_pass.value != "" && 
    	    	    laForm.new_pass.value != laForm.new_pass2.value) {
        		metError('pass',"Les deux mot de pass ne sont pas identique");
        		valid=false;
	    	}
    	    else {
    	    	Expression2 = new RegExp("^([a-zA-Z0-9_&$ -]+){1,}$", "g");
    	    	if (laForm.new_pass.value > 0 && 
	                !Expression2.test(laForm.new_pass.value) ) {
    			    metError('pass',"Mot de passe au mauvais format, [a-zA-Z0-9_&$ -].");
    			    valid=false;
             	}  
    	    }

	    	if (valid) {
	    		x_is_goodPass(laForm.usr_login.value, laForm.pass_old.value, display_suitePass);
	    	}
		}

		/* affichage apres appel x_is_goodPass */
		function display_suitePass(val) {
    		x_action_majPass(document.formMembre.idUser.value,document.formMembre.new_pass.value,display_void);
    		resetPass();
		}

		/* affichage apres x_action_majPass */
		function display_void(val) {
			alert(val);
		}

		/* remise a zero des champs pour la saisie du mot de passe */
		function resetPass() {
			getElement('usr_pass_error').innerHTML='';
			document.formMembre.pass_old.value="";
			document.formMembre.new_pass.value="";
			document.formMembre.new_pass2.value="";
			Cache_layer('mod_pass');
			document.formMembre.chgPass.style.display='';
		}

		/* confirmation de la suppression d'un membre */
	    function supMembre(laForm) {
	    	<?php if (isset($GET_mode) && $GET_mode == "gestion") {?>
	    	if (confirm('Etes vous sur de vouloir supprimer ce membre ?')) {
	    		laForm.action.value="Supprimer";
        		laForm.submit();
	    	}
	    	<?php } else {?>
	    	if (confirm('Vous supprimer de ce site ?')) {
	    		if (confirm('Laisser vos traces sur le sites (Actualités, photo ....) ?')) {
		    		laForm.action.value="SupprimerAll";
	    		}
	    		else {
	    			laForm.action.value="Supprimer";
	    		}
		    	laForm.submit();
	    	}
	    	
	    	<?php }?>
	    }

		/* annulation de la demande modification */
	    function annuleModif() {
    		laForm.action.value="AnnuleModif";
    		laForm.submit();
	    }

		/* verification de la libre utilisattion  des champ login et email */
	    function verifFree(element, type) {
		    if (type== "login") {
			    if (element.value != document.formMembre.usr_login_old.value) {
			    	Expression2 = new RegExp("^([a-zA-Z0-9]+){1,}$", "g");
		         	if (element.value.length > 0 && 
	                 	!Expression2.test(element.value) ) {
			        	metError('login',"Login au mauvais format, seul des caractère aplhanumerique.");
	         		}
		         	else {  
		    			x_is_loginFree_ajax(element.value, display_freeLogin);
		         	}
			    }
			    else if (element.value != "") {
			    	element.className='';
			    	getElement('usr_'+type+'_error').innerHTML="";
			    }
		    }
		    if (type== "email") {
		    	if (element.value != document.formMembre.usr_email_old.value) {
		    		x_is_emailFree_ajax(element.value, display_freeEmail);
			    }
			    else if (element.value != "") {
			    	element.className='';
			    	getElement('usr_'+type+'_error').innerHTML="";
			    }
		    }
	    }

		/* renseigne le champ en erreur */ 
		/* renseigne le champ en erreur */ 
		/* renseigne le champ en erreur */ 
		function metError(champ,message) {
	    	element=document.formMembre.elements['usr_'+champ];
	    	if (element) {
		    	//alert("focus sur "+champ);
	    		element.focus();
	    		element.className='error';
	    	}
	    	getElement('usr_'+champ+'_error').innerHTML=message;
	    }		    

		/* desactive le champ du mode erreur */
	    function unError(champ) {
	    	element=document.formMembre.elements['usr_'+champ];
	    	if (element) {
	    		element.className='';
	    	}
	    	if (getElement('usr_'+champ+'_error')) {
	    		getElement('usr_'+champ+'_error').innerHTML="";
	    	}
	    	
	    }

		/* affiche le message resultat de la rescherhe de libre utilisation du champ (type) */
	    function display_free(val,element, type) {
		    if (val) {
		    	element.className='change';
		    	getElement('usr_'+type+'_error').innerHTML="";
		    }
		    else {
		    	metError(type," dèjà utilisé.");
			}
	    }
		    
	    function display_freeLogin(val) {
	    	element=document.formMembre.usr_login;
	    	display_free(val,element, "login")
	    }
	    function display_freeEmail(val) {
	    	element=document.formMembre.usr_email;
	    	display_free(val,element, "email")
	    }


		/* refus de creation d'un compte */
	    /* refus de creation d'un compte */
	    function refus(laForm) {
		    var rep=prompt("Pourquoi ?");
		    if (rep != "null" && rep.trim().length > 0) {
			    laForm.jus_refus.value=rep;
            	laForm.action.value="refus";
            	laForm.submit();
		    }
		    else {
		    	if (confirm("Sans justification ?")) {
			    	alert("C'est toi le chef !");
			    	laForm.action.value="refus";
	            	laForm.submit();
		    	}
		    	else {
			    	refus(laForm);
		    	}
		    }
	    }

		/*Acceptation de creation d'un compte*/
	    function accepte(laForm) {
	    	laForm.action.value="accepter";
        	laForm.submit();
	    }

		/* refus de modification d'un compte */
	    function refusModif(laForm) {
		    rep=prompt("Pourquoi ?");
		    if (rep != "null" && rep.trim().length > 0) {
			    laForm.jus_refus.value=rep;
            	laForm.action.value="refus";
            	laForm.submit();
		    
		    }
		    else {
		    	if (confirm("Sans justification ?")) {
			    	alert("C'est toi le chef !");
			    	laForm.action.value="refusModif";
	            	laForm.submit();
			    	
		    	}
		    	else {
			    	refus(laForm);
		    	}
		    }
	    }

		/*Acceptation de modification d'un compte*/
	    function valideModif(laForm) {
	    	laForm.action.value="accepteModif";
        	laForm.submit();
    	
	    }//-->
	</script>
	    	<?//echo "Acces : $GET_option ; mode : $GET_mode<br/>"?>
<!--  EN MODE GESTION, retour sur la page de gestion -->
	    	<?php if (isset($GET_mode) && $GET_mode == "gestion") {?>
<div align=right class="link"><input type="button" value="Retour"
		class="button"
		onclick="location.href='<?=makeURL_GET(sizeof($_POST) > 0 ? $_POST : $_GET,"option=gestion")?>'" />
</div>
	    	<?php }?>

<form action="actions/membre_actions.php" method="POST" Name="formMembre">
	<input type="hidden" name="action" value="" /> 
	<input type="hidden" name="jus_refus" value="" /> 
	<input type="hidden" name="usr_etat" value="" /> 
	<input type="hidden" name="mode" value="<?=isset($GET_mode) ? $GET_mode : "direct"?>" /> 
	<input type="hidden" name="profil" value="<?=$COOKIE_AR_profil?>" /> 
	<input type="hidden" name="idUser" value="<?=isset($GET_usr_id) ? $GET_usr_id : $COOKIE_AR_id_usr ?>" />
    <?makeURL_FORM(sizeof($_POST) > 0 ? $_POST : $_GET);?>

<table width="90%" align="center" class="formulaire" border="0"
		cellspacing="3" cellpadding="5">
		<tr>
				<th class="tittab" colspan="10">Connection</th>
		</tr>
		<tr>
				<td width="30%" class="titrow">Login :</td>
				<td class="tabl0" colspan="3" width="70%">
					<input type="hidden" name="usr_login_old" value="" /> 
					<input type="text" name="usr_login" size=10 maxlength="10" title="Login" tabindex=10
						onblur="verifFree(this,'login')" /> 
					<span class="error" title="champ obligatoire">*</span> 
					<span class="error" id="usr_login_error"></span>
				</td>
		</tr>
		<tr>
				<td class="titrow">Mot de passe :</td>
				<td class="tabl0" width="100%"><?php if ($GET_option == "modif") { 
				  // EN MODIF
				  // ***************************************  ?>
				<table width="100%" cellpadding="1" cellspacing="1">
						<tr>
								<td><input type="button" class="button"
										value="Changer de mot de passe" name="chgPass"
										onclick="modifPass()" tabindex=20 /></td>
								<td>
								<div id="mod_pass" style="visibility: hidden">
								<table width="100%" cellpadding="1" cellspacing="1">
										<tr>
												<td class="titrow">Ancien</td>
												<td class="tabl0"><input type="password" name="pass_old"
														size=10 maxlength="10" title="ancien mot de passe"
														tabindex=21 /> <span class="error"
														title="champ obligatoire">*</span></td>
												<td class="titrow">Nouveau</td>
												<td class="tabl0">. <input type="password" name="new_pass"
														tabindex=22 size=10 maxlength="10"
														title="nouveau mot de passe" /> <span class="error"
														title="champ obligatoire">*</span></td>
										</tr>
										<tr>
												<td class="maj" align="center" colspan="2"><input
														type="button" class="button" value="Annuler"
														onclick="resetPass()" tabindex=26 /> <input type="button"
														class="button" value="Valider"
														onclick="validePass(this.form)" tabindex=25 /></td>
												<td class="titrow">Validation nouveau</td>
												<td class="tabl0"><input type="password" name="new_pass2"
														size=10 maxlength="10" tabindex=23
														title="validation du nouveau mot de passe" tabindex=3 /> <span
														class="error" title="champ obligatoire">*</span></td>
										</tr>
								</table>
								</div>
								<span class="error" id="usr_pass_error"></span></td>
						</tr>
				</table>
				<?php } else  {
				  // EN CREATION
				  // ***************************************?> <input
						type="password" name="usr_pass" tabindex=22 size=10 maxlength="10"
						title="nouveau mot de passe" onkeypress="unError('pass')"
						onchange="this.className='change'" /> <span class="error"
						title="champ obligatoire">*</span> Validation mot de passe <input
						type="password" name="usr_pass2" tabindex=22 size=10
						maxlength="10" title="nouveau mot de passe"
						onkeypress="unError('pass2')" onchange="this.className='change'" />
				<span class="error" title="champ obligatoire">*</span> <span
						class="error" id="usr_pass_error"></span> <?php }  ?></td>
		</tr>
		<!--  EM MODE GESTION Affichage du blocage du compte -->
		<?php if (isset($GET_mode) && $GET_mode == "gestion") {?>
		<tr>
				<td class=titrow>Bloquer le compte</td>
				<td colspan="3" class=tabl0><input type="checkbox" value="B"
						name="usr_etat_bloque" tabindex=30 /> &nbsp;&nbsp;&nbsp;Etat
				Actuel : <span id="usr_etat"></span></td>
		</tr>
		<?}?>
		<tr>
				<th class="tittab" colspan="10">Données personnelle</th>
		</tr>
		<tr>
				<td class="titrow">Nom ou pseudo :</td>
				<td class="tabl0" colspan="3"><input type="text" name="usr_nom"
						size=30 maxlength="50" title="Prénom & nom" tabindex=40
						onchange="this.className='change'" onkeypress="unError('nom')" />
				<span class="error" title="champ obligatoire">*</span> <span
						class="error" id="usr_nom_error"></span></td>
		</tr>
		<tr>
				<td class="titrow" width="30%">Email :</td>
				<td class="tabl0" colspan="3"><input type="hidden"
						name="usr_email_old" value="" /> <input type="text"
						name="usr_email" size=30 maxlength="70" title="email" tabindex=50
						onkeypress="unError('nom')" onBlur="verifFree(this,'email')" /> <span
						class="error" title="champ obligatoire">*</span> <span
						class="error" id="usr_email_error"></span></td>
		</tr>
</table>
		<?php if ($membre_MODE_UPDATE != "donnees" || (isset($GET_mode) && $GET_mode == "gestion") ||
		($GET_option == 'create' && $membre_MODE_CREATE=="confirm" && (!isset($GET_mode) || $GET_mode != "gestion") ) ) {?>
<table width="90%" align="center" class="formulaire" border="0"
		cellspacing="3" cellpadding="5" id="tableTymRub">
		<!-- Acces aux rubriques -->
		<tr>
				<th class="tittab" colspan="10">Type membre & rubriques (<span
						class="maj" id="etat"></span>)</th>
		</tr>
		<tr>
				<td class="titrow" valign="top" id="tdTym" width="30%">
				<div class="tittab">Type Membre <span class="error"
						title="champ obligatoire">*</span></div>
				<input type="hidden" name="usr_id_tym_old" value="" /> <?php foreach($tabTym as $val) {
				  $aff=false;

				  if ($val['tym_niveau'] >= $membre_NIVEAU_MINI_CREATE_MEMBRE &&
				  $val['tym_niveau'] <= $membre_NIVEAU_MAXI_CREATE_MEMBRE ) {
				    $aff=true;
				  }
				  if ($val['tym_niveau'] == $COOKIE_AR_profil) {
				    $aff=true;
				  }

				  if ($aff) {?> <?$usr_connect=isset($COOKIE_AR_id_usr) ? $COOKIE_AR_id_usr : "";?>
				  <?$usr_id=isset($GET_usr_id) ? $GET_usr_id : $usr_connect;?> <input
						type="radio" value="<?=$val['tym_id']?>" name="id_tym"
						onclick="affichRubriques('<?=$val['tym_niveau']?>','<?=$usr_id?>')" />
						<?=$val['tym_libelle']?><br />
						<?php } // fin si aff?> <?php } // fin foreach?> <span
						id="tym_voulu" class="maj"></span> <span class="error"
						id="usr_id_tym_error"></span></td>
				<td id="lesRubriques" valign="top" class="tabl0" width="100%"
						colspan="3" id="tdRub" width="70%"></td>
		</tr>
		<!--  SI pas libre modif, justification -->
		<tr id="trJustification" style="display: none">
				<td class="titrow">Justification :</td>
				<td class="tabl0" colspan="3"><textarea rows="5" cols="100"
						name="usr_justification"></textarea> <br />
				<span class="error" id="usr_justification_error"></span></td>
		</tr>

</table>
						<?php }?>

<div class="maj" align="center"><? if ($GET_option=="create") {?> <input
		type="button" class="button" name="Creation" value="Creation"
		onclick="valide(this.form,'Creation')" /> <?php } else {?> <span
		id="buttonPlus" /></span> <?php }?></div>
</form>
